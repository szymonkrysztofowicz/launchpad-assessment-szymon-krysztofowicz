---
AWSTemplateFormatVersion: "2010-09-09"
Description: Stack to create CloudFront
# yamllint disable rule:line-length
######################################################################
# Metadata
######################################################################
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: AWS Parameters
      Parameters:
        - ARNCertificate
        - WPDomainName
        - PublicAlbDnsName
        - S3BucketName
        - S3BucketDNS
        - ALBHostedZone
    ParameterLabels:
      ARNCertificate:
        default: CloudFront Certificate ARN
      PublicAlbDnsName:
        default: Public ALB DNS Name
      WPDomainName:
        default: Domain name of the WordPress site
      S3BucketName:
        default: S3 Bucket
      S3BucketDNS:
        default: S3 Bucket DNS Name
      ALBHostedZone:
        default: ALB Hosted Zone
######################################################################
# Parameters
######################################################################
Parameters:

  ARNCertificate:
    AllowedPattern: ^$|(arn:aws:acm:)([a-z0-9/:-])*([a-z0-9])$
    Description: '[ Optional ] The AWS Certification Manager certificate ARN for the CloudFront distribution certificate - this certificate should be created in the us-east-1 (N. Virginia) region and must reference the WordPress domain name you use below.'
    Type: String
  PublicAlbDnsName:
    Description: The public application load balancer dns name.
    Type: String
  WPDomainName:
    AllowedPattern: ^$|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
    Description: 'The main domain name of the WordPress site (e.g. example.com).'
    Type: String
  S3BucketName:
    Description: S3Bucket Name static assets
    Type: String
  S3BucketDNS:
    Description: S3Bucket DNS Name static assets
    Type: String
  ALBHostedZone:
    Description: Application Load Balancer Hosted Zone
    Type: String

Conditions:

  # SslCertificate:
  #   !Not [ !Equals [ '', !Ref Cert] ]
  # NoSslCertificate:
  #   !Equals [ '', !Ref Cert ]
  WPDomainName:
    !Not [ !Equals [ '', !Ref WPDomainName ] ]  
  NoWPDomainName:
    !Equals [ '', !Ref WPDomainName ]

Resources:

  # Cert:
  #   Type: AWS::CertificateManager::Certificate
  #   Properties:
  #     DomainName: !Ref WPDomainName
  #     DomainValidationOptions:
  #       - DomainName: !Ref WPDomainName
  #         ValidationDomain: !Ref WPDomainName
  #     ValidationMethod: DNS

  CloudFrontOriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Properties:
      OriginRequestPolicyConfig:
        CookiesConfig:
          CookieBehavior: none
        HeadersConfig:
          HeaderBehavior: none
        QueryStringsConfig:
          QueryStringBehavior: none
        Name: frontorigin

  CloudFrontDistributionSslCertificate:
    Type: AWS::CloudFront::Distribution
    # Condition: SslCertificate
    Properties:
      DistributionConfig:
        Aliases:
          #- !If [ WPDomainName, !Join [ '', [ 'www.', !Ref WPDomainName ] ], !Ref 'AWS::NoValue' ]
          - !If [ WPDomainName, !Ref WPDomainName, !Ref 'AWS::NoValue' ]
        CacheBehaviors:
        - PathPattern: wp-admin/*
          AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          DefaultTTL: 0
          MaxTTL: 0
          MinTTL: 0
          ForwardedValues:
            QueryString: true
            Headers:
            - '*'
            Cookies:
                Forward: all
          TargetOriginId: alb
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
        - PathPattern: wp-login.php
          AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          DefaultTTL: 0
          MaxTTL: 0
          MinTTL: 0
          ForwardedValues:
            QueryString: true
            Headers:
            - '*'
            Cookies: 
                Forward: all
          TargetOriginId: alb
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
        - PathPattern: wp-includes/*
          AllowedMethods:
          - GET
          - HEAD
          DefaultTTL: 900
          MaxTTL: 900
          MinTTL: 900
          ForwardedValues:
            QueryString: true
          TargetOriginId: s3
          ViewerProtocolPolicy: allow-all
          Compress: true
        - PathPattern: wp-content/*
          AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          DefaultTTL: 900
          MaxTTL: 900
          MinTTL: 900
          ForwardedValues:
            QueryString: true
          TargetOriginId: s3
          ViewerProtocolPolicy: allow-all
          Compress: true
        Comment: !Ref 'AWS::StackName'
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          DefaultTTL: 0
          MaxTTL: 0
          MinTTL: 0
          ForwardedValues:
            QueryString: true
            Headers:
            - Host
            - CloudFront-Forwarded-Proto
            - CloudFront-Is-Mobile-Viewer
            - CloudFront-Is-Tablet-Viewer
            - CloudFront-Is-Desktop-Viewer
            Cookies:
              Forward: whitelist
              WhitelistedNames:
              - comment_*
              - wordpress_*
              - wp-settings-*
          TargetOriginId: alb
          ViewerProtocolPolicy: allow-all
          Compress: true
        Enabled: true
        Origins:
          - DomainName: !Ref S3BucketDNS
            Id: s3
            S3OriginConfig:
              OriginAccessIdentity:
                !Join ['', ['origin-access-identity/cloudfront/', !Ref CloudFrontOriginAccessIdentity]]
          # - DomainName: !Ref PublicAlbDnsName
          #   Id: alb
          #   CustomOriginConfig:
          #     OriginProtocolPolicy: https-only
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref ARNCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'CloudFront OAI for domainname'

  # BucketPolicy:
  #   Type: AWS::S3::BucketPolicy
  #   Properties:
  #     Bucket: !Ref S3BucketName
  #     PolicyDocument:
  #       Statement:
  #         - Action:
  #             - s3:GetObject
  #           Effect: Allow
  #           Resource: !Join ['', ['arn:aws:s3:::', !Ref S3BucketName, '/*']]
  #           Principal:
  #             CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
#### DNS Record pointing on Cloudfront distribution
  DNSRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties: 
      Comment: No Comment
      HostedZoneId: Z02531452M2TPWI72LHCE
      RecordSets: 
        - Name: !Ref WPDomainName
          Type: A
          AliasTarget:
            HostedZoneId: !Ref ALBHostedZone
            DNSName: !GetAtt 'CloudFrontDistributionSslCertificate.DomainName'
